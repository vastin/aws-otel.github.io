{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/docs/getting-started/lambda","result":{"data":{"mdx":{"id":"9cc4c114-e30b-5c05-b0b7-f4ccf3100fed","excerpt":"The AWS Distro for OpenTelemetry Lambda (ADOT Lambda) layer for AWS Lambda provides a plug and play user experience by automatically \ninstrumenting a Lambdaâ€¦","fields":{"slug":"/docs/getting-started/lambda/"},"frontmatter":{"title":"AWS Distro for OpenTelemetry Lambda Support For Python","description":"The AWS Distro for OpenTelemetry Lambda (ADOT Lambda) layer for AWS Lambda provides a plug and play user experience by automatically instrumenting a Lambda function, by packaging OpenTelemetry Python together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray. Users can enable and disable OpenTelemetry for their Lambda function without changing code. Currently, this layer is only for Python Lambda functions.","image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AWS Distro for OpenTelemetry Lambda Support For Python\",\n  \"description\": \"The AWS Distro for OpenTelemetry Lambda (ADOT Lambda) layer for AWS Lambda provides a plug and play user experience by automatically instrumenting a Lambda function, by packaging OpenTelemetry Python together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray. Users can enable and disable OpenTelemetry for their Lambda function without changing code. Currently, this layer is only for Python Lambda functions.\",\n  \"path\": \"/docs/getting-started/lambda\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The AWS Distro for OpenTelemetry Lambda (ADOT Lambda) layer for AWS Lambda provides a plug and play user experience by automatically\\ninstrumenting a Lambda function, by packaging \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-python\"\n  }), \"OpenTelemetry Python\"), \" together\\nwith an out-of-the-box configuration for AWS Lambda and AWS X-Ray. Users can enable and disable OpenTelemetry for their Lambda function\\nwithout changing code. Currently, this layer is only for Python Lambda functions.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"requirements\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#requirements\",\n    \"aria-label\": \"requirements permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Requirements\"), mdx(\"p\", null, \"The Lambda layer supports Python 3.8 Lambda runtimes. For more information about supported Python versions, see the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-python/blob/master/README.md#supported-runtimes\"\n  }), \"OpenTelemetry Python\"), \" and the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pypi.org/project/opentelemetry-api/\"\n  }), \"package on PyPi\"), \".\"), mdx(\"p\", null, \"To build the Lambda Layer, install the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html\"\n  }), \"AWS SAM CLI\"), \"and\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html\"\n  }), \"AWS CLI\"), \" tools.\"), mdx(\"p\", null, \"Configure the AWS CLI using \", \"[aws configure]\", \". Provide your AWS credentials,\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-mac.html#serverless-sam-cli-install-mac-iam-permissions\"\n  }), \"with administrator permissions\"), \",\\nand your chosen default Region.\"), mdx(\"p\", null, \"Note: Lambda layers are a rationalized resource, meaning that they can only be used in the Region in which they are published. Make sure to publish\\nthe layer in the same Regions as your Lambda functions.\"), mdx(SubSectionSeparator, {\n    mdxType: \"SubSectionSeparator\"\n  }), mdx(\"h3\", {\n    \"id\": \"build-the-lambda-layer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#build-the-lambda-layer\",\n    \"aria-label\": \"build the lambda layer permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Build the Lambda Layer\"), mdx(\"p\", null, \"In this section, we will pull, build, and publish a reusable Lambda layer for use with Python Lambda Functions. This includes a reduced version of the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector\"\n  }), \"AWS Distro for OpenTelemetry Collector (ADOT Collector)\"), \", which runs as a Lambda extension.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download a local copy of the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/archive/main.zip\"\n  }), \"aws-otel-lambda repository from Github\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unzip the downloaded repository and run the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"run.sh\"), \" script from the sample-apps directory. This publishes the layer into your personal account.\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"cd sample-apps/python-lambda && clear\\n\")))), mdx(\"p\", null, \"Tips:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To publish the layer to other Regions, use  \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-r\"), \", for example \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./run.sh -r us-west-2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After the layer is published, it can be reused across multiple Lambda functions. You don\\u2019t have to republish the layer, unless you would like to upgrade the layer to the latest version.\")), mdx(\"p\", null, \"You will need the layer Amazon Resource Name (ARN) to add it to your Lambda function. To get the ARN from another region, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-r <region>\"), \" as shown previously.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \" # Get the Lambda layer ARN\\n ./run.sh -l \\n\")), mdx(SubSectionSeparator, {\n    mdxType: \"SubSectionSeparator\"\n  }), mdx(\"h3\", {\n    \"id\": \"enable-auto-instrumentation-for-your-lambda-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#enable-auto-instrumentation-for-your-lambda-function\",\n    \"aria-label\": \"enable auto instrumentation for your lambda function permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Enable auto-instrumentation for your Lambda function\"), mdx(\"p\", null, \"To enable the AWS Distro for OpenTelemetry in your Lambda function, you need to add and configure the layer, and then enable tracing.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the Lambda function you intend to instrument in the in AWS console. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Layers in Designer\"), \" section, choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add a layer\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"specify an ARN\"), \", paste the layer ARN, and then choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add the environment variable \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS_LAMBDA_EXEC_WRAPPER = /opt/python/adot-instrument\"), \" to your Lambda function. This enable auto-instumentations.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\"\n  }), \"Enable active tracing\"), \" for your AWS Lambda function.\")), mdx(\"p\", null, \"Tips:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"By default, the layer is configured to\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/sample-apps/python-lambda/template.yml#L23\"\n  }), \"export traces to AWS X-Ray\"), \",\\nmake sure your Lambda role has the required X-Ray permissions.\")), mdx(SubSectionSeparator, {\n    mdxType: \"SubSectionSeparator\"\n  }), mdx(\"h3\", {\n    \"id\": \"remove-opentelemetry-from-your-lambda-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#remove-opentelemetry-from-your-lambda-function\",\n    \"aria-label\": \"remove opentelemetry from your lambda function permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Remove OpenTelemetry from your Lambda function\"), mdx(\"p\", null, \"To disable OpenTelemetry for you Lambda function, remove the Lambda layer, remove the environment\\nvariable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AWS_LAMBDA_EXEC_WRAPPER\"), \", and disable active tracing, as explained in the section above.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"configuration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#configuration\",\n    \"aria-label\": \"configuration permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Configuration\"), mdx(\"p\", null, \"The ADOT Python Lambda layer combines both OpenTelemetry Python and the ADOT Collector. The configuration of the ADOT Collector follows the OpenTelemetry standard.\"), mdx(\"p\", null, \"By default, the ADOT Lambda layer uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/extensions/aoc-extension/config.yaml\"\n  }), \"config.yaml\"), \",\\nwhich exports telemetry data to AWS X-Ray and AWS CloudWatch.\"), mdx(\"p\", null, \"For debugging, you can turn on the logging exporter in the Collector by adding the environment variable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ADOT_DEBUG=true\"), \" in the Lambda function.\"), mdx(\"p\", null, \"To fully customize the Collector config, there are two options:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bring customized config file (and ca/cert/key files) into the Lambda function by the Lambda layer, then set the Collector config by environment variable \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ADOT_CONFIG=<your config file path>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add the environment variable \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ADOT_CONFIG_CONTENT=<Full content of your config file>\"))), mdx(\"p\", null, \"For more information about ADOT Collector configuration like adding ca/cert/key files, see the Github\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/extensions/sample-aoc-config/README.md\"\n  }), \"README.md\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Requirements"},{"depth":3,"value":"Build the Lambda Layer"},{"depth":3,"value":"Enable auto-instrumentation for your Lambda function"},{"depth":3,"value":"Remove OpenTelemetry from your Lambda function"},{"depth":2,"value":"Configuration"}]}},"pageContext":{"slug":"/docs/getting-started/lambda/","githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/getting-started/lambda.mdx"}},"staticQueryHashes":["2501019404","973074209"]}